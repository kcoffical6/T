---
// Testimonials component
const testimonials = [
    {
        name: 'Mike Taylor',
        location: 'Lahore, Pakistan',
        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100',
        testimonial:
            'On the Windows talking painted pasture yet its express parties use. Sure last upon he same as knew next. Of believed or diverted no.'
    },
    {
        name: 'Chris Thomas',
        location: 'CEO of Red Button',
        avatar: 'https://images.unsplash.com/photo-1583864697784-a0efc8379f70?w=100',
        testimonial:
            'On the Windows talking painted pasture yet its express parties use. Sure last upon he same as knew next. Of believed or diverted no.'
    },
    {
        name: 'Jeny Doe',
        location: 'UX Designer',
        avatar: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=100',
        testimonial:
            'On the Windows talking painted pasture yet its express parties use. Sure last upon he same as knew next. Of believed or diverted no.'
    }
]
---

<section class='relative bg-white py-16 dark:bg-gray-900 md:py-24'>
    <div class='container mx-auto px-4'>
        <div class='flex flex-col items-center gap-12 md:flex-row'>
            <!-- Left Content -->
            <div class='text-center md:w-1/2 md:text-left'>
                <p class='text-lg font-semibold uppercase text-gray-600 dark:text-gray-400'>Testimonials</p>
                <h2 class='mb-8 font-serif text-4xl font-bold text-secondary-600 dark:text-secondary-400 md:text-5xl'>
                    What people say about Us.
                </h2>
                <div id='dots' class='flex items-center justify-center space-x-2 md:justify-start'>
                    <!-- Dots will be generated by script -->
                </div>
            </div>
            <!-- Right Carousel -->
            <div class='relative md:w-1/2'>
                <div id='testimonial-carousel' class='relative w-full overflow-hidden'>
                    <div id='testimonial-slides' class='flex transition-transform duration-500 ease-in-out'>
                        {
                            testimonials.map((t) => (
                                <div class='testimonial-slide w-full shrink-0 p-4'>
                                    <div class='relative rounded-xl bg-white p-6 shadow-lg dark:bg-gray-800'>
                                        <img
                                            src={t.avatar}
                                            alt={t.name}
                                            class='absolute -left-6 -top-6 size-16 rounded-full border-4 border-white object-cover dark:border-gray-800'
                                        />
                                        <p class='mb-4 text-gray-600 dark:text-gray-400'>{t.testimonial}</p>
                                        <h3 class='font-bold text-gray-800 dark:text-gray-200'>{t.name}</h3>
                                        <p class='text-sm text-gray-500 dark:text-gray-400'>{t.location}</p>
                                    </div>
                                </div>
                            ))
                        }
                    </div>
                </div>
                <div class='mt-8 flex items-center space-x-4 md:absolute md:-bottom-16 md:right-0 md:mt-0'>
                    <button
                        id='prev-btn'
                        class='rounded-full border border-gray-400 p-2 hover:bg-gray-100 dark:border-gray-600 dark:hover:bg-gray-700'
                    >
                        <svg
                            class='size-6 text-gray-600 dark:text-gray-400'
                            fill='none'
                            stroke='currentColor'
                            viewBox='0 0 24 24'
                            ><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 19l-7-7 7-7'
                            ></path></svg
                        >
                    </button>
                    <button
                        id='next-btn'
                        class='rounded-full border border-gray-400 p-2 hover:bg-gray-100 dark:border-gray-600 dark:hover:bg-gray-700'
                    >
                        <svg
                            class='size-6 text-gray-600 dark:text-gray-400'
                            fill='none'
                            stroke='currentColor'
                            viewBox='0 0 24 24'
                            ><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 5l7 7-7 7'
                            ></path></svg
                        >
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

<script define:vars={{ testimonials }}>
    const slidesContainer = document.getElementById('testimonial-slides')
    const prevBtn = document.getElementById('prev-btn')
    const nextBtn = document.getElementById('next-btn')
    const dotsContainer = document.getElementById('dots')

    let activeIndex = 0

    function createDots() {
        testimonials.forEach((_, i) => {
            const dot = document.createElement('div')
            dot.classList.add('w-2.5', 'h-2.5', 'rounded-full', 'cursor-pointer', 'transition-colors')
            dot.classList.add(i === activeIndex ? 'bg-secondary-600' : 'bg-gray-300')
            dot.addEventListener('click', () => {
                activeIndex = i
                updateCarousel()
            })
            dotsContainer.appendChild(dot)
        })
    }

    function updateCarousel() {
        slidesContainer.style.transform = `translateX(-${activeIndex * 100}%)`

        // Update dots
        const dots = dotsContainer.children
        for (let i = 0; i < dots.length; i++) {
            dots[i].classList.toggle('bg-secondary-600', i === activeIndex)
            dots[i].classList.toggle('bg-gray-300', i !== activeIndex)
        }
    }

    prevBtn.addEventListener('click', () => {
        activeIndex = (activeIndex - 1 + testimonials.length) % testimonials.length
        updateCarousel()
    })

    nextBtn.addEventListener('click', () => {
        activeIndex = (activeIndex + 1) % testimonials.length
        updateCarousel()
    })

    // Initial setup
    createDots()
    updateCarousel()
</script>
